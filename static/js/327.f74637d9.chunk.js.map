{"version":3,"file":"static/js/327.f74637d9.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n\n  (contacts, filtered) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filtered.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      contacts.some(\n        event =>\n          event.name.toLowerCase() === name.toLowerCase() &&\n          event.number === number\n      )\n    ) {\n      alert(`${name}: ${number} is already in contacts!`);\n\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name,\n        number,\n      })\n    );\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Box>\n        <TextField\n          id=\"standard-basic\"\n          type=\"text\"\n          value={name}\n          label=\"Name\"\n          variant=\"standard\"\n          onChange={handleChange}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          fullWidth\n          sx={{\n            mb: '1rem',\n            color: '#1976d2',\n            backgroundColor: '#fffefe',\n          }}\n        />\n      </Box>\n      <Box>\n        <TextField\n          type=\"tel\"\n          value={number}\n          onChange={handleChange}\n          name=\"number\"\n          id=\"standard-basic\"\n          label=\"Number\"\n          variant=\"standard\"\n          required\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          sx={{\n            mb: '1rem',\n            color: '#1976d2',\n            backgroundColor: '#fffefe',\n          }}\n        />\n      </Box>\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        sx={{\n          mt: '20px',\n        }}\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Box, TextField } from '@mui/material';\n\nimport { setQueryFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    dispatch(setQueryFilter(event.target.value));\n  };\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" gap=\"10px\">\n      <TextField\n        type=\"text\"\n        value={filter}\n        onChange={onChange}\n        label=\"Find contacts by name\"\n        name=\"filter\"\n        id=\"standard-basic\"\n        variant=\"standard\"\n        sx={{\n          mb: '1rem',\n          color: '#1976d2',\n          backgroundColor: '#fffefe',\n          width: '100%',\n        }}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </Box>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { useSelector } from 'react-redux';\nimport { Button, Typography } from '@mui/material';\n\nimport { selectVisibleContacts } from 'redux/selectors';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className=\"list\">\n      {visibleContacts.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            {/* <p>\n              {name}: {number}\n            </p> */}\n            <Typography\n              variant=\"h7\"\n              component=\"h2\"\n              color=\"#1577d8\"\n              borderRadius=\"5px\"\n              padding=\"2px\"\n              backgroundColor=\"#c4ffd6\"\n            >\n              {name}: {number}\n            </Typography>\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              sx={{\n                mt: '20px',\n              }}\n              id={id}\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </Button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container, Typography } from '@mui/material';\n\nimport { fetchContacts } from 'redux/operations';\nimport { selectContacts, selectIsLoading, selectError } from 'redux/selectors';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nexport default function ContactsPage() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Typography variant=\"h7\" component=\"h2\">\n        Phonebook\n      </Typography>\n      <ContactForm />\n\n      <Typography variant=\"h7\" component=\"h2\">\n        Contacts\n      </Typography>\n      <Filter />\n\n      {isLoading && !error && <p style={{ textAlign: 'center' }}>Loading...</p>}\n\n      {contacts.length === 0 && !isLoading ? (\n        <p style={{ textAlign: 'center', fontWeight: 500, color: '#ef0b14' }}>\n          You don't have any contacts yet\n        </p>\n      ) : (\n        <ContactList />\n      )}\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","filtered","contact","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","some","alert","addContact","Box","TextField","id","type","label","variant","onChange","pattern","title","required","fullWidth","sx","mb","color","backgroundColor","Button","mt","Filter","display","alignItems","gap","setQueryFilter","target","width","ContactList","visibleContacts","className","map","Typography","component","borderRadius","padding","onClick","deleteContact","ContactsPage","useEffect","fetchContacts","Container","style","textAlign","length","fontWeight"],"sourceRoot":""}