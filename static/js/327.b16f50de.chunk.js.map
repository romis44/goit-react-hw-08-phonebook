{"version":3,"file":"static/js/327.b16f50de.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n\n  (contacts, filtered) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filtered.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      contacts.some(\n        event =>\n          event.name.toLowerCase() === name.toLowerCase() &&\n          event.number === number\n      )\n    ) {\n      alert(`${name}: ${number} is already in contacts!`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name,\n        number,\n      })\n    );\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Box>\n        <label className=\"inputLabel\">\n          Name\n          <TextField\n            type=\"text\"\n            value={name}\n            onChange={handleChange}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Roman Kovalchuk\"\n            required\n          />\n        </label>\n      </Box>\n      <Box>\n        <label className=\"inputLabel\">\n          Number\n          <TextField\n            type=\"tel\"\n            value={number}\n            onChange={handleChange}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"+380-00-000-0000\"\n            required\n          />\n        </label>\n      </Box>\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Box, TextField } from '@mui/material';\n\nimport { setQueryFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    dispatch(setQueryFilter(event.target.value));\n  };\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" gap=\"10px\">\n      <span>Find contacts by name</span>\n      <TextField\n        type=\"text\"\n        value={filter}\n        onChange={onChange}\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        placeholder=\"Roman Kovalchuk\"\n        required\n      />\n    </Box>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { useSelector } from 'react-redux';\nimport Button from '@mui/material/Button';\n\nimport { selectVisibleContacts } from 'redux/selectors';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className=\"list\">\n      {visibleContacts.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <Button\n              type=\"button\"\n              id={id}\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </Button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Container from '@mui/material/Container';\n\nimport { fetchContacts } from 'redux/operations';\nimport { selectContacts, selectIsLoading, selectError } from 'redux/selectors';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nexport default function ContactsPage() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n\n      {isLoading && !error && <p style={{ textAlign: 'center' }}>Loading...</p>}\n\n      {contacts.length === 0 && !isLoading ? (\n        <p style={{ textAlign: 'center' }}>You don't have any contacts yet</p>\n      ) : (\n        <ContactList />\n      )}\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","filtered","contact","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","some","alert","addContact","Box","className","TextField","type","onChange","pattern","title","placeholder","required","Button","Filter","display","alignItems","gap","setQueryFilter","target","ContactList","visibleContacts","map","id","onClick","deleteContact","ContactsPage","useEffect","fetchContacts","Container","style","textAlign","length"],"sourceRoot":""}